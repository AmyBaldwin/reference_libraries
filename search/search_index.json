{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to the User Manual for the Reference Libraries The reference libraries are an integral part of a suite of genome analysis tools that explore bacterial genomes. Reference genomes are used in multiple processes within the Tools. The reference libraries are required for: identification of contamination in raw read data taxonomy determination phylogenetic analysis The reference libraries are maxThree, maxOne and kraken2. The suite of genome analysis tools includes: Application Description The Core Genome assembly, taxonomic classification, phylogeny, annotation and mass screening. Tool 1 Mass screening with curated databases. Tool 2 Mass screening with genes you choose. Tool 3 Comparison of genomes, and phylogeny. Tool 4 Primer design: identification of unique stretches of DNA. They are built with the pipeline manager Nextflow , and operate within Singularity containers. The suite was developed as part of a collaborative project between Volac International Ltd . and Cardiff University , partly funded by Innovate UK as part of a knowledge transfer partnership (KTP) .","title":"Introduction"},{"location":"index.html#welcome-to-the-user-manual-for-the-reference-libraries","text":"The reference libraries are an integral part of a suite of genome analysis tools that explore bacterial genomes. Reference genomes are used in multiple processes within the Tools. The reference libraries are required for: identification of contamination in raw read data taxonomy determination phylogenetic analysis The reference libraries are maxThree, maxOne and kraken2. The suite of genome analysis tools includes: Application Description The Core Genome assembly, taxonomic classification, phylogeny, annotation and mass screening. Tool 1 Mass screening with curated databases. Tool 2 Mass screening with genes you choose. Tool 3 Comparison of genomes, and phylogeny. Tool 4 Primer design: identification of unique stretches of DNA. They are built with the pipeline manager Nextflow , and operate within Singularity containers. The suite was developed as part of a collaborative project between Volac International Ltd . and Cardiff University , partly funded by Innovate UK as part of a knowledge transfer partnership (KTP) .","title":"Welcome to the User Manual for the Reference Libraries"},{"location":"FAQs.html","text":"Frequently asked questions Which reference libraries are required for which processes? Process Parameter (specified in nextflow.config ) File format kraken2_QC kdbpath hash.k2d , opts.k2d , taxo.k2d kraken2 kdb_minikraken_path hash.k2d , opts.k2d , taxo.k2d kraken2_miniKraken kdb_reads_path hash.k2d , opts.k2d , taxo.k2d fastANI fastanidbpath and fastanireflistpath .fna and the index lists lsBSR_NEW lsbsrrefgenomefasta .fasta","title":"FAQs"},{"location":"FAQs.html#frequently-asked-questions","text":"","title":"Frequently asked questions"},{"location":"FAQs.html#which-reference-libraries-are-required-for-which-processes","text":"Process Parameter (specified in nextflow.config ) File format kraken2_QC kdbpath hash.k2d , opts.k2d , taxo.k2d kraken2 kdb_minikraken_path hash.k2d , opts.k2d , taxo.k2d kraken2_miniKraken kdb_reads_path hash.k2d , opts.k2d , taxo.k2d fastANI fastanidbpath and fastanireflistpath .fna and the index lists lsBSR_NEW lsbsrrefgenomefasta .fasta","title":"Which reference libraries are required for which processes?"},{"location":"access.html","text":"Logging in Open MobaXterm on your Volac laptop. If MobaXterm isn\u2019t already installed on you Volac laptop call the Volac Service desk on 0845 3511924 or volac.servicedesk@scc.com , and ask them to install it for you. The information can be found here: https://mobaxterm.mobatek.net/ . If you have logged in previously, double click on a User Session. {: style=\"height:300px\" } Folders can be found in the side bar to the left. Folders and files can be directly dragged and dropped between your personal computer and the Tool. This Tool is located inside the genome_store folder. Opening a stable connection (recommended) You currently have access to the Tool if you have completed the above section. However, sometimes the network connection between the computer that you are using and the machine where the Tool is located can break. If the Tool is running when the connection breaks, even if the break is only brief, the Tool will stop. You can tell if this has happen because your terminal\u2019s window will freeze; there may also be a partially populated output folder. A terminal multiplexer (tmux) solves this. A terminal multiplexer allows the user to start a session and then detach, so a remote process continues running even when the user is disconnected. It also has the benefit of allowing the user to detach from one computer and reattach using a different computer. To initiate a tmux session in the Appliance terminal window enter: tmux new -s <name> Example This is the code to set up a stable tmux connection named Idris: tmux new -s Idris Tip You can set up multiple tmux sessions; give each one a different name. To detach from a session hold down the Ctrl key and press b , release both keys, then press d . To list existing tmux sessions use tmux ls . To reconnect to an existing session use tmux a -t <name> .","title":"Accessing the server"},{"location":"access.html#logging-in","text":"Open MobaXterm on your Volac laptop. If MobaXterm isn\u2019t already installed on you Volac laptop call the Volac Service desk on 0845 3511924 or volac.servicedesk@scc.com , and ask them to install it for you. The information can be found here: https://mobaxterm.mobatek.net/ . If you have logged in previously, double click on a User Session. {: style=\"height:300px\" } Folders can be found in the side bar to the left. Folders and files can be directly dragged and dropped between your personal computer and the Tool. This Tool is located inside the genome_store folder.","title":"Logging in"},{"location":"access.html#opening-a-stable-connection-recommended","text":"You currently have access to the Tool if you have completed the above section. However, sometimes the network connection between the computer that you are using and the machine where the Tool is located can break. If the Tool is running when the connection breaks, even if the break is only brief, the Tool will stop. You can tell if this has happen because your terminal\u2019s window will freeze; there may also be a partially populated output folder. A terminal multiplexer (tmux) solves this. A terminal multiplexer allows the user to start a session and then detach, so a remote process continues running even when the user is disconnected. It also has the benefit of allowing the user to detach from one computer and reattach using a different computer. To initiate a tmux session in the Appliance terminal window enter: tmux new -s <name> Example This is the code to set up a stable tmux connection named Idris: tmux new -s Idris Tip You can set up multiple tmux sessions; give each one a different name. To detach from a session hold down the Ctrl key and press b , release both keys, then press d . To list existing tmux sessions use tmux ls . To reconnect to an existing session use tmux a -t <name> .","title":"Opening a stable connection (recommended)"},{"location":"config.html","text":"Updating the nextflow config file Locate the config file in the File Browser. Double-click on nextflow.config to edit Update the relevent lines (see below), save and close. For the taxonomy module The taxonomy module uses the maxThree database. maxThree has two parts: params.fastanidbpath , the reference genome sequences (ending .fasta ) and params.fastanireflistpath , the names of the reference genomes grouped in files by Genus. Be sure the update both: params.fastanidbpath = \"/file_path/fna_YYYY-MM-DD/*\" params.fastanireflistpath = \"/file_path/fna_ref_lists_YYYY-MM-DD/*\" For the phylogeny module The phylogeny module uses the maxOne database. The location of the database is specified here: params.lsbsrrefgenomefasta = \"/file_path/fasta_YYYY-MM-DD/\" genomes must end in .fasta . Example The whole path to a fasta database built on 29th April 2022 is: params.lsbsrrefgenomefasta = \"/genomics/home/vol-genomics/genome_tools/reference_libraries/fasta_2022-04-29/\" Paths to kraken2 databases kraken2 databases can either be made or a pre-built one can be downloaded. The three processes of the Core Tool that use kraken2 databases are: kdbpath is used to determine the Genus of each query strain, kdb_minikraken_path is only run if the isolate is of an unexpected Genus, and kdb_reads_path determines if contamination is present in the raw reads. Multiple kraken2 databases can be specified using: params.kdbpath = \"/file_path/database_name_YYYYMMDD\" params.kdb_minikraken_path = \"/file_path/database_name_YYYYMMDD\" params.kdb_reads_path = \"/file_path/database_name_YYYYMMDD\" Information You are not likely to need to change file_path : /genomics/home/vol-genomics/genome_tools/reference_libraries/ Take care not to modify any other text in the config file.","title":"Linking to the Tools"},{"location":"config.html#updating-the-nextflow-config-file","text":"Locate the config file in the File Browser. Double-click on nextflow.config to edit Update the relevent lines (see below), save and close.","title":"Updating the nextflow config file"},{"location":"config.html#for-the-taxonomy-module","text":"The taxonomy module uses the maxThree database. maxThree has two parts: params.fastanidbpath , the reference genome sequences (ending .fasta ) and params.fastanireflistpath , the names of the reference genomes grouped in files by Genus. Be sure the update both: params.fastanidbpath = \"/file_path/fna_YYYY-MM-DD/*\" params.fastanireflistpath = \"/file_path/fna_ref_lists_YYYY-MM-DD/*\"","title":"For the taxonomy module"},{"location":"config.html#for-the-phylogeny-module","text":"The phylogeny module uses the maxOne database. The location of the database is specified here: params.lsbsrrefgenomefasta = \"/file_path/fasta_YYYY-MM-DD/\" genomes must end in .fasta . Example The whole path to a fasta database built on 29th April 2022 is: params.lsbsrrefgenomefasta = \"/genomics/home/vol-genomics/genome_tools/reference_libraries/fasta_2022-04-29/\"","title":"For the phylogeny module"},{"location":"config.html#paths-to-kraken2-databases","text":"kraken2 databases can either be made or a pre-built one can be downloaded. The three processes of the Core Tool that use kraken2 databases are: kdbpath is used to determine the Genus of each query strain, kdb_minikraken_path is only run if the isolate is of an unexpected Genus, and kdb_reads_path determines if contamination is present in the raw reads. Multiple kraken2 databases can be specified using: params.kdbpath = \"/file_path/database_name_YYYYMMDD\" params.kdb_minikraken_path = \"/file_path/database_name_YYYYMMDD\" params.kdb_reads_path = \"/file_path/database_name_YYYYMMDD\" Information You are not likely to need to change file_path : /genomics/home/vol-genomics/genome_tools/reference_libraries/ Take care not to modify any other text in the config file.","title":"Paths to kraken2 databases"},{"location":"importing.html","text":"Importing a pre-built kraken2 reference library kraken2 is used by three processes within the Core Tool: kraken2, kraken2_miniKraken and kraken2_QC. Prebuilt kraken2 reference libraries can be found on Ben Langmead's Github page . Ben Langmead is one of the contributers to kraken2 . Navigate to the scripts folder by entering cd /genomics/home/vol-genomics/genome_tools/reference_libraries . Enter curl -o file_name address , substituting file_name and address , and wait for the file to transfer completely. Unpack using tar -zxvf file_name.tar.gz , substituting file_name . To use server space efficiently, the file_name.tar.gz can now be delete, and any older version. CURL example To c opy URL , or curl, the stardard kraken2 database originally generated on 17th May 2021 and limited to 8 Gb use: curl -o k2_standard_8gb_20210517.tar.gz https://genome-idx.s3.amazonaws.com/kraken/k2_standard_8gb_20210517.tar.gz Tips Keep the original file name to remind you origin of the library. Find the URL by right-clicking over the item you want to transfer in the HTTPS URL column on Ben Langmead's website , and selecting Copy Link .","title":"Importing a library"},{"location":"importing.html#importing-a-pre-built-kraken2-reference-library","text":"kraken2 is used by three processes within the Core Tool: kraken2, kraken2_miniKraken and kraken2_QC. Prebuilt kraken2 reference libraries can be found on Ben Langmead's Github page . Ben Langmead is one of the contributers to kraken2 . Navigate to the scripts folder by entering cd /genomics/home/vol-genomics/genome_tools/reference_libraries . Enter curl -o file_name address , substituting file_name and address , and wait for the file to transfer completely. Unpack using tar -zxvf file_name.tar.gz , substituting file_name . To use server space efficiently, the file_name.tar.gz can now be delete, and any older version. CURL example To c opy URL , or curl, the stardard kraken2 database originally generated on 17th May 2021 and limited to 8 Gb use: curl -o k2_standard_8gb_20210517.tar.gz https://genome-idx.s3.amazonaws.com/kraken/k2_standard_8gb_20210517.tar.gz Tips Keep the original file name to remind you origin of the library. Find the URL by right-clicking over the item you want to transfer in the HTTPS URL column on Ben Langmead's website , and selecting Copy Link .","title":"Importing a pre-built kraken2 reference library"},{"location":"library.html","text":"The Reference Libraries maxThree for Taxonomy The maxThree reference library contains genome assemblies of lactic acid bacteria. Three strains of every species within the following Genera are included: all Genera from the newly named Lactobacillaceae* family the Genera Enterococcus, the Genera Carnobacterium, and the Genera Lactococcus. * see below for a list of the Genera with family Lactobacillaceae. The genomes are downloaded from the RefSeq database. The strains with the highest specifications are included. For some species, data for fewer than three strains is available. File names are Genus_species_strain, and are cleaned to remove any spaces, colons, backslashes and additional information. They are saved as .fna in a folder named fna_YYYY-MM-DD . A separate folder containing lists of all the downloaded strains is also generated, fna_ref_lists_YYYY-MM-DD/ . maxOne for Phylogeny The Core uses the maxOne reference library to generate a phylogenetic tree. Like maxThree, the maxOne reference library also contains genome assemblies of lactic acid bacteria. One strains of every species within the newly named Lactobacillaceae* family are included. * see below for a list of the Genera with family Lactobacillaceae. This library is made using a similar script to maxThree, however in this case a single genome for each species is included. File names are Genus_species_strain, and are cleaned to remove any spaces, colons, backslashes and additional information. They are saved as .fasta in a folder named fasta_YYYY-MM-DD . kraken2 kraken2 databases are required by three different processes in the Core Tool : kraken2_QC determines if contamination is present in the raw reads, kraken2 is used to determine the Genus of each query strain and kraken2_miniKraken provides taxonomy information if the isolate is of an unexpected Genus. Information The 31 Genera of the Lactobacillaceae family are: Acetilactobacillus, Agrilactobacillus, Amylolactobacillus, Apilactobacillus, Bombilactobacillus, Companilactobacillus, Convivina, Dellaglioa, Fructilactobacillus, Fructobacillus, Furfurilactobacillus, Holzapfelia, Lacticaseibacillus, Lactiplantibacillus, Lactobacillus, Lapidilactobacillus, Latilactobacillus, Lentilactobacillus, Leuconostoc, Levilactobacillus, Ligilactobacillus, Limosilactobacillus, Liquorilactobacillus, Loigolactobacillus, Oenococcus, Paralactobacillus, Paucilactobacillus, Schleiferilactobacillus, Secundilactobacillus, Pediococcus, Weissella.","title":"The Libraries"},{"location":"library.html#the-reference-libraries","text":"","title":"The Reference Libraries"},{"location":"library.html#maxthree-for-taxonomy","text":"The maxThree reference library contains genome assemblies of lactic acid bacteria. Three strains of every species within the following Genera are included: all Genera from the newly named Lactobacillaceae* family the Genera Enterococcus, the Genera Carnobacterium, and the Genera Lactococcus. * see below for a list of the Genera with family Lactobacillaceae. The genomes are downloaded from the RefSeq database. The strains with the highest specifications are included. For some species, data for fewer than three strains is available. File names are Genus_species_strain, and are cleaned to remove any spaces, colons, backslashes and additional information. They are saved as .fna in a folder named fna_YYYY-MM-DD . A separate folder containing lists of all the downloaded strains is also generated, fna_ref_lists_YYYY-MM-DD/ .","title":"maxThree for Taxonomy"},{"location":"library.html#maxone-for-phylogeny","text":"The Core uses the maxOne reference library to generate a phylogenetic tree. Like maxThree, the maxOne reference library also contains genome assemblies of lactic acid bacteria. One strains of every species within the newly named Lactobacillaceae* family are included. * see below for a list of the Genera with family Lactobacillaceae. This library is made using a similar script to maxThree, however in this case a single genome for each species is included. File names are Genus_species_strain, and are cleaned to remove any spaces, colons, backslashes and additional information. They are saved as .fasta in a folder named fasta_YYYY-MM-DD .","title":"maxOne for Phylogeny"},{"location":"library.html#kraken2","text":"kraken2 databases are required by three different processes in the Core Tool : kraken2_QC determines if contamination is present in the raw reads, kraken2 is used to determine the Genus of each query strain and kraken2_miniKraken provides taxonomy information if the isolate is of an unexpected Genus. Information The 31 Genera of the Lactobacillaceae family are: Acetilactobacillus, Agrilactobacillus, Amylolactobacillus, Apilactobacillus, Bombilactobacillus, Companilactobacillus, Convivina, Dellaglioa, Fructilactobacillus, Fructobacillus, Furfurilactobacillus, Holzapfelia, Lacticaseibacillus, Lactiplantibacillus, Lactobacillus, Lapidilactobacillus, Latilactobacillus, Lentilactobacillus, Leuconostoc, Levilactobacillus, Ligilactobacillus, Limosilactobacillus, Liquorilactobacillus, Loigolactobacillus, Oenococcus, Paralactobacillus, Paucilactobacillus, Schleiferilactobacillus, Secundilactobacillus, Pediococcus, Weissella.","title":"kraken2"},{"location":"running.html","text":"Generating up-to-date reference libraries Reference libraries can easily be made as follows: Navigate to the scripts folder by entering cd /genomics/home/vol-genomics/genome_tools/reference_libraries/scripts . Run the appropriate script using the command in the table below. Check that the following message appears: Reference library complete . Reference libraries are automatically saved here: /genomics/home/vol-genomics/genome_tools/reference_libraries The newly generated libraries are saved with the current date. The commands are: Reference Library Command maxOne python3 maxOne_phylogeny.py maxThree python3 maxThree_taxonomy.py kraken2 ./kraken2_db_1Mb.sh","title":"Making the new library"},{"location":"running.html#generating-up-to-date-reference-libraries","text":"Reference libraries can easily be made as follows: Navigate to the scripts folder by entering cd /genomics/home/vol-genomics/genome_tools/reference_libraries/scripts . Run the appropriate script using the command in the table below. Check that the following message appears: Reference library complete . Reference libraries are automatically saved here: /genomics/home/vol-genomics/genome_tools/reference_libraries The newly generated libraries are saved with the current date. The commands are: Reference Library Command maxOne python3 maxOne_phylogeny.py maxThree python3 maxThree_taxonomy.py kraken2 ./kraken2_db_1Mb.sh","title":"Generating up-to-date reference libraries"},{"location":"troubleshooting.html","text":"Troubleshooting These are some common remedies: It is (usually) safer to copy and paste commands To avoid spellling error use the \u2018tab\u2019 key to auto-complete Do the hyphens or inverted commas need to be re-typed? Are the spaces in the correct place? Is the command prompt in the correct directory (folder)? Is the login connection still active Is the input file named correctly? Never use {} or [] in file names. If these fail, ask for help.","title":"Troubleshooting"},{"location":"troubleshooting.html#troubleshooting","text":"These are some common remedies: It is (usually) safer to copy and paste commands To avoid spellling error use the \u2018tab\u2019 key to auto-complete Do the hyphens or inverted commas need to be re-typed? Are the spaces in the correct place? Is the command prompt in the correct directory (folder)? Is the login connection still active Is the input file named correctly? Never use {} or [] in file names. If these fail, ask for help.","title":"Troubleshooting"}]}